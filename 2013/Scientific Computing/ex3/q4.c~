#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<time.h>
#include"McGrath.h"

int main(void){
  // matrix convention: start from 1,1 (blanks in (0,j) and (i,0))
  double **ans;
  double *x, *y, *w, *S;
  double *rho, *psi, *temp;
  double dx;
  int i,j,N;

  // TODO
  // write x,y,w printing program - done
  // fix assignment of values to work array to work from N>4
  // current progress: S8 works, S16 segfaults - problem is in FastUN work array assembly and reassembly references going negative
  // work array allocation in FastUN is not tested
  // update FastSN, FastTN and FastUN to use SFactors

  N=4096;
  dx = 1.0/(double)N;

  temp = (double*)malloc((N)*sizeof(double));
  psi = (double*)malloc((N)*sizeof(double));
  rho = (double*)malloc((N)*sizeof(double));
  w = (double*)malloc(N*sizeof(double));
  S = (double*)malloc(N*sizeof(double));
  S = SFactors(N);

  printf("initialising rho\n");
  defineQ4(rho,N);
  //displayVector(rho, N-1);

  printf("Transforming rho\n");
  FastSN(temp, rho, w, S, N, 1);

  printf("Calculating psi\n");
  calcPsiBad(temp, psi, N);

  printf("Transforming back\n");
  FastSN(temp,psi,w,S,N,1);
  displayVector(temp, N-1);
  //writeVector(temp,N-1,"test.txt");  

  /*
  //displayVector(S, (N/2)-1);
  for(i=1;i<=N;i++){
    y[i] = i;
  }
  */

  // testing code
  /*
  //printf("Running SlowSN\n");
  SlowSN(x,y,w,S,N,1);
  //printf("Running SlowTN\n");
  SlowTN(x,y,w,S,N,1);
  //printf("Running SlowUN\n");
  SlowUN(x,y,w,S,N,1);
  */

  /*
  printf("TESTING FastSN:\n");
  printf("running FastSN\n");
  FastSN(x,y,w,S,N,1);
  printf("Result from FastSN\n");
  displayVector(x,N-1);

  
  printf("running SlowSN\n");
  for(i=1;i<N;i++){
    x[i] = 0;
    y[i] = i;
  }
  SlowSN(x,y,w,S,N,1);
  ////displayVector(x,N-1);
  */
    

  /*
  //printf("TESTING FastTN:\n");
  //printf("running FastTN:\n");
  for(i=1;i<=N;i++){
    x[i] = 0;
    y[i] = i;
  }
  FastTN(x,y,w,S,N,1);
  //printf("Results from FastTN:\n");
  //displayVector(x,N);

  //printf("running SlowTN:\n");
  for(i=1;i<=N;i++){
    x[i] = 0;
    y[i] = i;
  }
  SlowTN(x,y,w,S,N,1);
  */

  /*
  //printf("TESTING FastUN:\n");
  //printf("running FastUN:\n");
  for(i=1;i<=N;i++){
    x[i] = 0;
    y[i] = i;
  }
  FastUN(x,y,w,S,N,1);
  //printf("Result from FastUN\n");
  //displayVector(x,N);

  //printf("running SlowUN:\n");
  for(i=1;i<=N;i++){
    x[i] = 0;
    y[i] = i;
  }
  SlowUN(x,y,w,S,N,1);
  */

  /*
  //printf("Testing intermediate T8\n");
  for(i=1;i<8;i++){
    x[i] = 0.0;
    y[i] = 16.0;
  }
  y[8] = 8.0;
  SlowTN(x,y,w,S,8,1);

  //printf("Testing intermediate U4\n");
  for(i=1;i<=4;i++){
    y[i] = 16.0;
  }
  FastUN(x,y,w,S,4,1);
  for(i=1;i<=4;i++){
    y[i] = 16.0;
  }
  SlowUN(x,y,w,S,4,1);

  //printf("Testing base T2\n");
  y[1] = 32.0;
  y[2] = 16.0;
  SlowTN(x,y,w,S,2,1);  
  */

  /*
  //printf("Testing intermediate T4\n");
  for(i=1;i<4;i++){
    x[i] = 0.0;
    y[i] = 8.0;
  }
  y[4] = 4.0;
  SlowTN(x,y,w,S,4,1);

  //printf("Testing base T2\n");
  x[1] = 0.0;
  x[2] = 0.0;
  y[1] = 8.0;
  y[2] = 4.0;
  SlowTN(x,y,w,S,2,1);

  //printf("Testing base U2\n");
  x[1] = 0.0;
  x[2] = 0.0;
  y[1] = 8.0;
  y[2] = 8.0;
  SlowUN(x,y,w,S,2,1);
  */

  /*
  //printf("Testing intermediate U4 with N = 4, skip = 4, x,y,w offset by 3\n");
  N = 16;
  for(i=0;i<N;i++){
    x[i] = 0;
    w[i] = 0;
    if(i%2==0){
      y[i] = 0;
    } else {
      y[i] = 16;
    }
    y[15] = 8;
  }
  //displayXYW(x,y,w,N-1);
  FastUN(x-3,y-3,w-3,S,4,4);
  return(0);
  */
}
